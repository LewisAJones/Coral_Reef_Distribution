p1 <- p1 + labs(subtitle = "Least training presence")
p2 <- ggplot(data = data) +
geom_rect(data = periods, mapping=aes(xmin=min(data$min_ma), xmax=0, ymin= -68, ymax= -60), linetype = 1, colour = "black", fill="black", alpha=1)  +
geom_rect(data = throwing_shade, aes(xmin=min_ma, xmax=max_ma, ymin=-68, ymax=75), color= "grey95", alpha=0.2)  +
geom_rect(data = periods, mapping=aes(xmin=min_ma, xmax=max_ma, ymin= -68, ymax= -60), colour = "black", fill=periods$color, alpha=1)  +
geom_text(data = periods, mapping=aes(x=(min_ma+max_ma)/2, y= -64, label = abbrev), colour = "black", alpha=1)  +
geom_hline(aes(yintercept = 0), size = 1, colour = "black", alpha = 0.7) +
geom_point(data = occ, aes(x = mid_ma, y = P.Lat, shape = "Reef localities"), colour = "#0c2c84", size = 1.5, alpha = 1) +
geom_line(aes(x = mid_ma, y = as.numeric(MaxSSS_max), colour = "Max", linetype = "Max"), size = 1) +
geom_line(aes(x = mid_ma, y = as.numeric(MaxSSS_min)), linetype = 1, size = 1) +
geom_line(aes(x = mid_ma, y = as.numeric(MaxSSS_upper), colour = "95% quantiles",  linetype = "95% quantiles"), size = 1) +
geom_line(aes(x = mid_ma, y = as.numeric(MaxSSS_lower)), linetype = 2, colour = "red", size = 1) +
scale_x_reverse(expand=c(0,0)) +
scale_y_continuous(expand = c(0,0), limits = c(-68, 75), breaks = seq(-60, 75, 30)) +
scale_colour_manual(name = "L1", values = cols) +
scale_linetype_manual(name = "L1", values = lty) +
scale_shape_manual(name = "L1", values = pts) +
labs(x = "Time (Ma)", y = expression(bold(paste("Palaeolatitude (",degree,")")))) +
theme(panel.background = element_blank(),
plot.margin = margin(0.5,0.5,0.5,0.5, "cm"),
panel.grid.minor.y = element_line(colour = NA),
panel.grid.minor.x = element_line(colour = NA),
panel.grid.major.y = element_line(colour = NA),
panel.grid.major.x = element_line(colour = NA),
legend.position = c(0.88, 0.91),
legend.title = element_blank(),
legend.background = element_blank(),
legend.key = element_blank(),
legend.spacing.y = unit(-0.2, "cm"),
legend.key.size = unit(0.75, "lines"),
legend.key.width = unit(1, "cm"),
legend.text = element_text(size = 10),
panel.border = element_rect(colour = "black", fill = NA),
axis.text.x = element_text(size = 14, angle = 0, hjust = 0.5),
axis.text.y = element_text(size = 14, angle = 0, hjust = 0),
axis.title.y = element_text(size = 14, face = "bold", vjust = 5, hjust = 0.6),
axis.title.x = element_text(size = 14, face = "bold", vjust = -1),
aspect.ratio = 0.5)
p2
ggsave("./figures/reef_zone_plot_MaxSSS.png", plot = p2, width = 200, height = 110, units = "mm", dpi = 600)
p2 <- p2 + labs(subtitle = "Maximising the sum of sensitivity and specificity")
p <- ggarrange(p1, p2, ncol=1, nrow=2, labels = "auto", align = "v", font.label = list(size = 18))
p
ggsave("./figures/reef_zone_plot.jpg", plot = p, width = 65, height = 75, units = "mm", dpi = 600, scale = 3)
# linear model plot
# Lewis A. Jones
# Feb 2022
#---------------------------------
library(ggplot2)
library(ggpubr)
library(dplyr)
stages <- read.csv("./data/stage_bins.csv")
#---------------------------------
data <- read.csv("./results/Area/area_global.csv")
reefs <- read.csv("./data/occurrences/PARED_subsampled.csv")
reefs <- data.frame(table(reefs$interval_name))
colnames(reefs) <- c("interval_name", "n")
data <- left_join(x = data, y = stages, by = c("stage" = "interval_name"))
reefs <- left_join(x = reefs, y = stages, by = c("interval_name"))
reefs <- reefs[order(reefs$mid_ma),]
data <- data[order(data$mid_ma),]
data$LPT_global <- data$LPT_global/100000
data$MaxSSS_global <- data$MaxSSS_global/100000
data <- left_join(x = data, y = reefs[,c("interval_name", "n")], by = c("stage" = "interval_name"))
lm_eqn <- function(df, x, y){
m <- lm(y ~ x, df);
eq <- substitute(italic(R)^2 == r2~~~~~italic(P)~"="~pval,
list(r2 = format(summary(m)$r.squared, nsmall = 3, digits = 0, scientific = FALSE),
pval = format(coef(summary(m))[2, "Pr(>|t|)"], digits = 3)))
as.character(as.expression(eq));
}
#LPT
p1 <- ggplot(data = data, aes()) +
geom_point(aes(x = LPT_global, y = n), shape = 21, fill = data$color, colour = "black", size = 2, alpha = 1) +
geom_smooth(aes(x = LPT_global, y = n), method='lm', colour = "black", formula= y~x) +
labs(x = expression(bold(paste("Suitable habitat area (",10^6~km^2,")",sep=""))), y = "Number of reef sites", subtitle = "Least training presence") +
theme(panel.background = element_blank(),
plot.margin = margin(0.5,0.5,0.5,0.5, "cm"),
panel.grid.minor.y = element_line(colour = NA),
panel.grid.minor.x = element_line(colour = NA),
panel.grid.major.y = element_line(colour = NA),
panel.grid.major.x = element_line(colour = NA),
legend.position = c(0.1, 0.925),
legend.title = element_blank(),
legend.background = element_blank(),
legend.key = element_rect(colour = NA, fill = NA),
legend.key.size = unit(0.75, "lines"),
legend.key.width = unit(0.75, "cm"),
legend.text = element_text(size = 10),
panel.border = element_rect(colour = "black", fill = NA),
plot.subtitle = element_text(size = 10, angle = 0, hjust = 0.5),
axis.text.x = element_text(size = 14, angle = 0, hjust = 0.5),
axis.text.y = element_text(size = 14, angle = 0, hjust = 0),
axis.title.y = element_text(size = 14, face = "bold", vjust = 2),
axis.text.y.right = element_text(size = 14, angle = 0, hjust = 0),
axis.title.y.right = element_text(size = 14, face = "bold", vjust = 2),
axis.title.x = element_text(size = 14, face = "bold", vjust = -1),
aspect.ratio = 1)
p1 <- p1 + geom_text(x = 340, y = 45, label = lm_eqn(df = data, x = data$LPT_global, y = data$n), colour = "black", size = 3, parse = TRUE)
#p1
#MAXSSS
p2 <- ggplot(data = data, aes()) +
geom_point(aes(x = MaxSSS_global, y = n), shape = 21, fill = data$color, colour = "black", size = 2, alpha = 1) +
geom_smooth(aes(x = MaxSSS_global, y = n), method='lm', colour = "black", formula= y~x) +
labs(x = expression(bold(paste("Suitable habitat area (",10^6~km^2,")",sep=""))), y = "Number of reef sites", subtitle = "Maximising the sum of sensitivity and specificity") +
theme(panel.background = element_rect(colour = "white", fill = "white"),
plot.margin = margin(0.5,0.5,0.5,0.5, "cm"),
panel.grid.minor.y = element_line(colour = NA),
panel.grid.minor.x = element_line(colour = NA),
panel.grid.major.y = element_line(colour = NA),
panel.grid.major.x = element_line(colour = NA),
legend.position = c(0.1, 0.925),
legend.title = element_blank(),
legend.background = element_blank(),
legend.key = element_rect(colour = NA, fill = NA),
legend.key.size = unit(0.75, "lines"),
legend.key.width = unit(0.75, "cm"),
legend.text = element_text(size = 10),
panel.border = element_rect(colour = "black", fill = NA),
plot.subtitle = element_text(size = 10, angle = 0, hjust = 0.5),
axis.text.x = element_text(size = 14, angle = 0, hjust = 0.5),
axis.text.y = element_text(size = 14, angle = 0, hjust = 0),
axis.title.y = element_text(size = 14, face = "bold", vjust = 2),
axis.text.y.right = element_text(size = 14, angle = 0, hjust = 0),
axis.title.y.right = element_text(size = 14, face = "bold", vjust = 2),
axis.title.x = element_text(size = 14, face = "bold", vjust = -1),
aspect.ratio = 1)
p2 <- p2 + geom_text(x = 250, y = 45, label = lm_eqn(df = data, x = data$MaxSSS_global, y = data$n), colour = "black", size = 3, parse = TRUE)
#p2
p <- ggarrange(p1, p2, labels = c("a", "b"), ncol = 2)
#p
ggsave("./figures/linear_models.jpg", plot = p, width = 70, height = 35, units = "mm", dpi = 600, scale = 3)
# Area plot
# Lewis A. Jones
# March 2021
#---------------------------------
library(ggplot2)
library(ggpubr)
library(dplyr)
stages <- read.csv("./data/stage_bins.csv")
periods <- read.csv("./data/period_bins.csv")
stages <- stages[1:52,] #subset to stages of interest
periods <- periods[2:6,] #subset to periods of interest
periods$color <- "white"
throwing_shade <- periods[seq(1, nrow(periods), 2),]
data <- read.csv("./results/Area/area_global.csv")
reefs <- read.csv("./data/occurrences/PARED_subsampled.csv")
reefs <- data.frame(table(reefs$interval_name))
colnames(reefs) <- c("interval_name", "n")
data <- left_join(x = data, y = stages, by = c("stage" = "interval_name"))
reefs <- left_join(x = reefs, y = stages, by = c("interval_name"))
reefs <- reefs[order(reefs$mid_ma),]
data <- data[order(data$mid_ma),]
#area plot
# Lewis A. Jones
# March 2020
#---------------------------------
library(ggplot2)
library(ggpubr)
library(viridis)
library(grid)
library(dplyr)
stages <- read.csv("./data/stage_bins.csv")
stages <- subset(stages, max_ma < 250)
stages <- subset(stages, max_ma >= 3.6)
stages$duration <- stages$max_ma - stages$min_ma
stages$periodcol <- NA
periods <- read.csv("./data/period_bins.csv")
periods$duration <- periods$max_ma - periods$min_ma
#stages <- stages[1:52,] #subset to stages of interest
periods <- periods[2:6,] #subset to periods of interest
periods$color <- "white"
data <- read.csv("./results/Area/area_lat.csv")
data <- left_join(x = data, y = stages, by = c("stage" = "interval_name"))
data$LPT_area <- data$LPT_area/100000
data$MaxSSS_area <- data$MaxSSS_area/100000
#---------------------------------
for(i in 1:nrow(periods)){
for(j in 1:nrow(stages)){
if(stages$mid_ma[j] <= periods$max_ma[i] & stages$mid_ma[j] >= periods$min_ma[i]){
stages$periodcol[j] <- paste(periods$color[i])}
}
}
#---------------------------------
p1 <- ggplot() +
geom_tile(data = data, aes(x = mid_ma, y = mid, fill = LPT_area, width = duration, height = 20), colour = "black") +
scale_fill_viridis(option = "D", direction = 1, limits = c(0, 200), breaks=seq(0, 200, by= 25), labels = seq(0, 200, by=25)) +
#geom_tile(data = NULL, aes(x = 298.900/2, y = 95, width = 298.900, height = 10), colour = "black", fill= "black")+
geom_tile(data = stages, aes(x = mid_ma, y = 95, width = duration, height = 10), colour = NA, fill= stages$color)+
geom_text(data = periods, aes(x = mid_ma, y = 95, label = abbrev), color = "black", size = 4) +
scale_y_continuous(expand = c(0,0), breaks = seq(-90, 90, 60)) +
scale_x_reverse(expand=c(0,0)) +
#coord_fixed(ratio = 0.8) +
labs(x = "Time (Ma)", y = expression(bold(paste("Palaeolatitude (",degree,")"))), subtitle = "") +
theme(
axis.text.x=element_text(size = 14, vjust = -1, angle = 0),
axis.text.y=element_text(size = 14, hjust = 1, angle = 0),
axis.title.x=element_text(size = 14, face = "bold", vjust = -4, colour = "Black"),
axis.title.y=element_text(size = 14, face = "bold", vjust = 4, colour = "black"),
legend.position="bottom",
plot.title = element_text(hjust = 0.5, vjust = 1, size = 12, face = "bold"),
plot.subtitle = element_text(hjust = 0, vjust = 1, size = 12, face = "plain"),
legend.text = element_text(size = 12),
legend.key.width = unit(c(3), "cm"),
legend.key.height = unit(c(0.8), "cm"),
legend.background = element_blank(),
legend.margin = margin(0, 0, 0, 0, "cm"),
legend.title = element_text(size = 14, face = "bold", vjust = -6, colour = "white"),
plot.margin = unit(c(0.5,0.5,0.5,0.5), "cm"),
panel.background=element_rect(fill = "white"),
panel.grid.minor=element_blank(),
plot.background=element_rect(fill = "white"),
aspect.ratio = 0.5)
p1 <- p1 + guides(fill = guide_colourbar(ticks.colour = "black", frame.colour = "black", label = TRUE, title = expression(bold(paste("Suitable habitat area (",10^5~km^2,")",sep=""))), title.position = "top", title.hjust = 0.5, title.vjust = -8.5))
ggsave("./figures/habitat_area_lat_LPT.pdf", plot = p1, width = 200, height = 140, units = "mm", dpi = 600)
p1 <- p1 + labs(subtitle = "Least training presence")
p2 <- ggplot() +
geom_tile(data = data, aes(x = mid_ma, y = mid, fill = MaxSSS_area, width = duration, height = 20), colour = "black") +
scale_fill_viridis(option = "D", direction = 1, limits = c(0, 200), breaks=seq(0, 200, by= 25), labels = seq(0, 200, by=25)) +
#geom_tile(data = NULL, aes(x = 298.900/2, y = 95, width = 298.900, height = 10), colour = "black", fill= "black")+
geom_tile(data = stages, aes(x = mid_ma, y = 95, width = duration, height = 10), colour = NA, fill= stages$color)+
geom_text(data = periods, aes(x = mid_ma, y = 95, label = abbrev), color = "black", size = 4) +
scale_y_continuous(expand = c(0,0), breaks = seq(-90, 90, 60)) +
scale_x_reverse(expand=c(0,0)) +
#coord_fixed(ratio = 0.8) +
labs(x = "Time (Ma)", y = expression(bold(paste("Palaeolatitude (",degree,")")))) +
theme(
axis.text.x=element_text(size = 14, vjust = -1, angle = 0),
axis.text.y=element_text(size = 14, hjust = 1, angle = 0),
axis.title.x=element_text(size = 14, face = "bold", vjust = -4, colour = "Black"),
axis.title.y=element_text(size = 14, face = "bold", vjust = 4, colour = "black"),
legend.position="bottom",
plot.title = element_text(hjust = 0.5, vjust = 1, size = 12, face = "bold"),
plot.subtitle = element_text(hjust = 0, vjust = 1, size = 12, face = "plain"),
legend.text = element_text(size = 12),
legend.key.width = unit(c(3), "cm"),
legend.key.height = unit(c(0.8), "cm"),
legend.background = element_blank(),
legend.margin = margin(0, 0, 0, 0, "cm"),
legend.title = element_text(size = 14, face = "bold", vjust = -6, colour = "white"),
plot.margin = unit(c(0.5,0.5,0.5,0.5), "cm"),
panel.background=element_rect(fill = "white"),
panel.grid.minor=element_blank(),
plot.background=element_rect(fill = "white"),
aspect.ratio = 0.5)
p2 <- p2 + guides(fill = guide_colourbar(ticks.colour = "black", frame.colour = "black", label = TRUE, title = expression(bold(paste("Suitable habitat area (",10^5~km^2,")",sep=""))), title.position = "top", title.hjust = 0.5, title.vjust = -8.5))
ggsave("./figures/habitat_area_lat_MaxSSS.png", plot = p2, width = 200, height = 140, units = "mm", dpi = 600)
p2 <- p2 + labs(subtitle = "Maximising the sum of sensitivity and specificity")
p <- ggarrange(p1, p2, ncol=1, nrow=2, labels = "auto", align = "v", font.label = list(size = 18), common.legend = FALSE, hjust = -2)
p
ggsave("./figures/habitat_area_lat.png",width = 210, height = 280, units = "mm", dpi = 600)
# Area plot
# Lewis A. Jones
# March 2021
#---------------------------------
library(ggplot2)
library(ggpubr)
library(dplyr)
stages <- read.csv("./data/stage_bins.csv")
periods <- read.csv("./data/period_bins.csv")
stages <- stages[1:52,] #subset to stages of interest
periods <- periods[2:6,] #subset to periods of interest
periods$color <- "white"
#---------------------------------
throwing_shade <- periods[seq(1, nrow(periods), 2),]
data <- read.csv("./results/Area/area_global.csv")
reefs <- read.csv("./data/occurrences/PARED_subsampled.csv")
reefs <- data.frame(table(reefs$interval_name))
colnames(reefs) <- c("interval_name", "n")
data <- left_join(x = data, y = stages, by = c("stage" = "interval_name"))
reefs <- left_join(x = reefs, y = stages, by = c("interval_name"))
reefs <- reefs[order(reefs$mid_ma),]
data <- data[order(data$mid_ma),]
data$LPT_global <- data$LPT_global/100000
data$MaxSSS_global <- data$MaxSSS_global/100000
data <- left_join(x = data, y = reefs[,c("interval_name", "n")], by = c("stage" = "interval_name"))
lm_eqn <- function(df, x, y){
m <- lm(y ~ x, df);
eq <- substitute(italic(R)^2 == r2~~~~~italic(P)~"="~pval,
list(r2 = format(summary(m)$r.squared, nsmall = 3, digits = 0, scientific = FALSE),
pval = format(coef(summary(m))[2, "Pr(>|t|)"], digits = 3)))
as.character(as.expression(eq));
}
# Value used to transform the data
coeff <- 5
p1 <- ggplot(data = data, aes()) +
geom_rect(data = periods, mapping=aes(xmin=min(data$min_ma), xmax=0, ymin= -40, ymax= -0), linetype = 1, colour = "black", fill="black", alpha=1)  +
geom_rect(data = throwing_shade, aes(xmin=min_ma, xmax=max_ma, ymin=-40, ymax=550), color= "grey95", alpha=0.2)  +
geom_rect(data = periods, mapping=aes(xmin=min_ma, xmax=max_ma, ymin= -40, ymax= 0), colour = "black", fill=periods$color, alpha=1)  +
geom_text(data = periods, mapping=aes(x=(min_ma+max_ma)/2, y= -20, label = abbrev), colour = "black", alpha=1)  +
geom_line(aes(x = mid_ma, y = LPT_global, colour = "LTP"), size = 1, alpha = 0.75) +
geom_line(aes(x = mid_ma, y = MaxSSS_global, colour = "MaxSSS"), size = 1, alpha = 0.75) +
geom_point(aes(x = mid_ma, y = LPT_global, colour = "LTP"), size = 1.5, alpha = 0.75) +
geom_point(aes(x = mid_ma, y = MaxSSS_global, colour = "MaxSSS"), size = 1.5, alpha = 0.75) +
geom_line(aes(x = mid_ma, y = n*coeff, colour = "Reef sites"), size = 1, alpha = 0.75) +
geom_point(aes(x = mid_ma, y = n*coeff, colour = "Reef sites"), size = 1.5, alpha = 0.75) +
scale_colour_manual(values = c("#0c2c84", "#1d91c0", "black"), labels = c("LTP", "MaxSSS", "Reef sites")) +
scale_x_reverse(expand=c(0,0)) +
scale_y_continuous(expand = c(0,0), limits = c(-40, 550), breaks = seq(0, 550, 100),
sec.axis = sec_axis(~./coeff, name = expression(bold(paste("Fossil coral reef sites (", italic("n"), ")", sep = ""))))) +
labs(x = "Time (Ma)", y = expression(bold(paste("Suitable habitat area (",10^5~km^2,")",sep="")))) +
theme(panel.background = element_blank(),
plot.margin = margin(0.5,0.5,0.5,0.5, "cm"),
panel.grid.minor.y = element_line(colour = NA),
panel.grid.minor.x = element_line(colour = NA),
panel.grid.major.y = element_line(colour = NA),
panel.grid.major.x = element_line(colour = NA),
legend.position = c(0.1, 0.925),
legend.title = element_blank(),
legend.background = element_blank(),
legend.key = element_rect(colour = NA, fill = NA),
legend.key.size = unit(0.75, "lines"),
legend.key.width = unit(0.75, "cm"),
legend.text = element_text(size = 10),
panel.border = element_rect(colour = "black", fill = NA),
axis.text.x = element_text(size = 14, angle = 0, hjust = 0.5),
axis.text.y = element_text(size = 14, angle = 0, hjust = 0),
axis.title.y = element_text(size = 14, face = "bold", vjust = 2),
axis.text.y.right = element_text(size = 14, angle = 0, hjust = 0),
axis.title.y.right = element_text(size = 14, face = "bold", vjust = 2),
axis.title.x = element_text(size = 14, face = "bold", vjust = -1),
aspect.ratio = 0.5)
#p1 <- p1 + geom_text(x = -33, y = 430, label = lm_eqn(df = data, x = data$LPT_global, y = data$n), colour = "#0c2c84", face = "bold", size = 3.5, parse = TRUE)
#p1 <- p1 + geom_text(x = -33, y = 404, label = lm_eqn(df = data, x = data$MaxSSS_global, y = data$n), colour = "#1d91c0", face = "bold", size = 3.5, parse = TRUE)
#p1
ggsave("./figures/global_hab_area.pdf", plot = p1, width = 70, height = 35, units = "mm", dpi = 600, scale = 3)
#sst and dem plot
# Lewis A. Jones
# March 2021
#---------------------------------
library(ggplot2)
library(ggpubr)
library(viridis)
library(grid)
library(dplyr)
stages <- read.csv("./data/stage_bins.csv")
stages <- subset(stages, max_ma < 250)
stages <- subset(stages, max_ma >= 3.6)
stages$duration <- stages$max_ma - stages$min_ma
stages$periodcol <- NA
periods <- read.csv("./data/period_bins.csv")
periods$duration <- periods$max_ma - periods$min_ma
#stages <- stages[1:52,] #subset to stages of interest
periods <- periods[2:6,] #subset to periods of interest
periods$color <- "white"
data <- read.csv("./results/Variables/lat_variables.csv")
data <- left_join(x = data, y = stages, by = c("stage" = "interval_name"))
data$dem <- data$dem/100000
#---------------------------------
for(i in 1:nrow(periods)){
for(j in 1:nrow(stages)){
if(stages$mid_ma[j] <= periods$max_ma[i] & stages$mid_ma[j] >= periods$min_ma[i]){
stages$periodcol[j] <- paste(periods$color[i])}
}
}
#---------------------------------
data <- subset(data, mid <= 40)
data <- subset(data, mid >= -40)
#vec <- which(data$sst < 18)
#data$sst[vec] <- NA
p1 <- ggplot() +
geom_tile(data = data, aes(x = mid_ma, y = mid, fill = sst, width = duration, height = 20), colour = "black") +
scale_fill_viridis(option = "D", direction = 1, limits = c(0, 35), breaks=seq(from = 0, to = 35, by = 5), labels = seq(from = 0, to = 35, by = 5)) +
#geom_tile(data = NULL, aes(x = 298.900/2, y = 95, width = 298.900, height = 10), colour = "black", fill= "black")+
geom_tile(data = stages, aes(x = mid_ma, y = 55, width = duration, height = 10), colour = NA, fill= stages$color)+
geom_text(data = periods, aes(x = mid_ma, y = 55, label = abbrev), color = "black", size = 4) +
scale_y_continuous(expand = c(0,0), breaks = seq(-50, 50, 20)) +
scale_x_reverse(expand=c(0,0)) +
#coord_fixed(ratio = 0.8) +
labs(x = "Time (Ma)", y = expression(bold(paste("Palaeolatitude (",degree,")")))) +
theme(
axis.text.x=element_text(size = 14, vjust = -1, angle = 0),
axis.text.y=element_text(size = 14, hjust = 1, angle = 0),
axis.title.x=element_text(size = 14, face = "bold", vjust = -4, colour = "Black"),
axis.title.y=element_text(size = 14, face = "bold", vjust = 4, colour = "black"),
legend.position="bottom",
plot.title = element_text(hjust = 0.5, vjust = 1, size = 12, face = "bold"),
plot.subtitle = element_text(hjust = 0, vjust = 0.5, size = 12, face = "bold"),
legend.text = element_text(size = 12),
legend.key.width = unit(c(3), "cm"),
legend.key.height = unit(c(0.8), "cm"),
legend.background = element_blank(),
legend.margin = margin(0, 0, 0, 0, "cm"),
legend.title = element_text(size = 16, face = "bold", vjust = -6, colour = "white"),
plot.margin = unit(c(0.5,0.5,0.5,0.5), "cm"),
panel.background=element_blank(),
panel.grid.minor=element_blank(),
plot.background=element_blank(),
aspect.ratio = 0.5)
p1 <- p1 + guides(fill = guide_colourbar(ticks.colour = "black", frame.colour = "black", label = TRUE, title = expression(bold(paste("Sea surface temperature (",degree,"C)",sep=""))), title.position = "top", title.hjust = 0.5, title.vjust = -8.5))
p1
p2 <- ggplot() +
geom_tile(data = data, aes(x = mid_ma, y = mid, fill = dem, width = duration, height = 20), colour = "black") +
scale_fill_viridis(option = "D", direction = 1, limits = c(0, 200), breaks=seq(0, 175, by= 25), labels = seq(0, 175, by = 25)) +
#geom_tile(data = NULL, aes(x = 298.900/2, y = 95, width = 298.900, height = 10), colour = "black", fill= "black")+
geom_tile(data = stages, aes(x = mid_ma, y = 55, width = duration, height = 10), colour = NA, fill= stages$color)+
geom_text(data = periods, aes(x = mid_ma, y = 55, label = abbrev), color = "black", size = 4) +
scale_y_continuous(expand = c(0,0), breaks = seq(-50, 50, 20)) +
scale_x_reverse(expand=c(0,0)) +
#coord_fixed(ratio = 0.8) +
labs(x = "Time (Ma)", y = expression(bold(paste("Palaeolatitude (",degree,")")))) +
theme(
axis.text.x=element_text(size = 14, vjust = -1, angle = 0),
axis.text.y=element_text(size = 14, hjust = 1, angle = 0),
axis.title.x=element_text(size = 14, face = "bold", vjust = -4, colour = "Black"),
axis.title.y=element_text(size = 14, face = "bold", vjust = 4, colour = "black"),
legend.position="bottom",
plot.title = element_text(hjust = 0.5, vjust = 1, size = 12, face = "bold"),
plot.subtitle = element_text(hjust = 0, vjust = 1, size = 12, face = "bold"),
legend.text = element_text(size = 12),
legend.key.width = unit(c(3), "cm"),
legend.key.height = unit(c(0.8), "cm"),
legend.background = element_blank(),
legend.margin = margin(0, 0, 0, 0, "cm"),
legend.title = element_text(size = 16, face = "bold", vjust = -6, colour = "white"),
plot.margin = unit(c(0.5,0.5,0.5,0.5), "cm"),
panel.background=element_blank(),
panel.grid.minor=element_blank(),
plot.background=element_blank(),
aspect.ratio = 0.5)
p2 <- p2 + guides(fill = guide_colourbar(ticks.colour = "black", frame.colour = "black", label = TRUE, title = expression(bold(paste("Shallow marine area (",10^5~km^2,")",sep=""))), title.position = "top", title.hjust = 0.5, title.vjust = -8.5))
p2
ggsave("./figures/temperature_plot.png", plot = p1, width = 210, height = 140, units = "mm", dpi = 600)
ggsave("./figures/shallow_marine_substrate_plot.png", plot = p2, width = 210, height = 140, units = "mm", dpi = 600)
# linear model plot
# Lewis A. Jones
# Feb 2022
#---------------------------------
library(ggplot2)
library(ggpubr)
library(dplyr)
stages <- read.csv("./data/stage_bins.csv")
#---------------------------------
data <- read.csv("./results/Area/area_global.csv")
reefs <- read.csv("./data/occurrences/PARED_subsampled.csv")
reefs <- data.frame(table(reefs$interval_name))
colnames(reefs) <- c("interval_name", "n")
data <- left_join(x = data, y = stages, by = c("stage" = "interval_name"))
reefs <- left_join(x = reefs, y = stages, by = c("interval_name"))
reefs <- reefs[order(reefs$mid_ma),]
data <- data[order(data$mid_ma),]
data$LPT_global <- data$LPT_global/100000
data$MaxSSS_global <- data$MaxSSS_global/100000
data <- left_join(x = data, y = reefs[,c("interval_name", "n")], by = c("stage" = "interval_name"))
lm_eqn <- function(df, x, y){
m <- lm(y ~ x, df);
eq <- substitute(italic(R)^2 == r2~~~~~italic(P)~"="~pval,
list(r2 = format(summary(m)$r.squared, nsmall = 3, digits = 0, scientific = FALSE),
pval = format(coef(summary(m))[2, "Pr(>|t|)"], digits = 3)))
as.character(as.expression(eq));
}
#LPT
p1 <- ggplot(data = data, aes()) +
geom_point(aes(x = LPT_global, y = n), shape = 21, fill = data$color, colour = "black", size = 2, alpha = 1) +
geom_smooth(aes(x = LPT_global, y = n), method='lm', colour = "black", formula= y~x) +
labs(x = expression(bold(paste("Suitable habitat area (",10^5~km^2,")",sep=""))), y = "Number of reef sites", subtitle = "Least training presence") +
theme(panel.background = element_blank(),
plot.margin = margin(0.5,0.5,0.5,0.5, "cm"),
panel.grid.minor.y = element_line(colour = NA),
panel.grid.minor.x = element_line(colour = NA),
panel.grid.major.y = element_line(colour = NA),
panel.grid.major.x = element_line(colour = NA),
legend.position = c(0.1, 0.925),
legend.title = element_blank(),
legend.background = element_blank(),
legend.key = element_rect(colour = NA, fill = NA),
legend.key.size = unit(0.75, "lines"),
legend.key.width = unit(0.75, "cm"),
legend.text = element_text(size = 10),
panel.border = element_rect(colour = "black", fill = NA),
plot.subtitle = element_text(size = 10, angle = 0, hjust = 0.5),
axis.text.x = element_text(size = 14, angle = 0, hjust = 0.5),
axis.text.y = element_text(size = 14, angle = 0, hjust = 0),
axis.title.y = element_text(size = 14, face = "bold", vjust = 2),
axis.text.y.right = element_text(size = 14, angle = 0, hjust = 0),
axis.title.y.right = element_text(size = 14, face = "bold", vjust = 2),
axis.title.x = element_text(size = 14, face = "bold", vjust = -1),
aspect.ratio = 1)
p1 <- p1 + geom_text(x = 340, y = 45, label = lm_eqn(df = data, x = data$LPT_global, y = data$n), colour = "black", size = 3, parse = TRUE)
#p1
#MAXSSS
p2 <- ggplot(data = data, aes()) +
geom_point(aes(x = MaxSSS_global, y = n), shape = 21, fill = data$color, colour = "black", size = 2, alpha = 1) +
geom_smooth(aes(x = MaxSSS_global, y = n), method='lm', colour = "black", formula= y~x) +
labs(x = expression(bold(paste("Suitable habitat area (",10^5~km^2,")",sep=""))), y = "Number of reef sites", subtitle = "Maximising the sum of sensitivity and specificity") +
theme(panel.background = element_rect(colour = "white", fill = "white"),
plot.margin = margin(0.5,0.5,0.5,0.5, "cm"),
panel.grid.minor.y = element_line(colour = NA),
panel.grid.minor.x = element_line(colour = NA),
panel.grid.major.y = element_line(colour = NA),
panel.grid.major.x = element_line(colour = NA),
legend.position = c(0.1, 0.925),
legend.title = element_blank(),
legend.background = element_blank(),
legend.key = element_rect(colour = NA, fill = NA),
legend.key.size = unit(0.75, "lines"),
legend.key.width = unit(0.75, "cm"),
legend.text = element_text(size = 10),
panel.border = element_rect(colour = "black", fill = NA),
plot.subtitle = element_text(size = 10, angle = 0, hjust = 0.5),
axis.text.x = element_text(size = 14, angle = 0, hjust = 0.5),
axis.text.y = element_text(size = 14, angle = 0, hjust = 0),
axis.title.y = element_text(size = 14, face = "bold", vjust = 2),
axis.text.y.right = element_text(size = 14, angle = 0, hjust = 0),
axis.title.y.right = element_text(size = 14, face = "bold", vjust = 2),
axis.title.x = element_text(size = 14, face = "bold", vjust = -1),
aspect.ratio = 1)
p2 <- p2 + geom_text(x = 250, y = 45, label = lm_eqn(df = data, x = data$MaxSSS_global, y = data$n), colour = "black", size = 3, parse = TRUE)
#p2
p <- ggarrange(p1, p2, labels = c("a", "b"), ncol = 2)
#p
ggsave("./figures/linear_models.jpg", plot = p, width = 70, height = 35, units = "mm", dpi = 600, scale = 3)
